plugins {
    id 'kotlin-multiplatform' version '1.3.20'
    id 'maven-publish'
    id "com.jfrog.bintray" version "1.8.4"
}

group 'com.batchofcode'
version project.findProperty('buildNum') ?: '0.0.1_SNAPSHOT'

repositories {
    mavenCentral()
    jcenter()
}

kotlin {
    targets {
        fromPreset(presets.macosX64, 'LambdaRuntimeMacos')
        fromPreset(presets.linuxX64, 'LambdaRuntime')
//        if (OperatingSystem.current().isMacOsX()) {
//            println("Building for Mac")
//            fromPreset(presets.macosX64, 'LambdaRuntime')
//        }
//        else {
//            println("Building for Linux")
//            fromPreset(presets.linuxX64, 'LambdaRuntime')
//        }

        configure([LambdaRuntime, LambdaRuntimeMacos]) {
            compilations.main.cinterops {
                libcurl
            }
        }
    }
    sourceSets {
        // Note: To enable common source sets please comment out 'kotlin.import.noCommonSourceSets' property
        // in gradle.properties file and re-import your project in IDE.
        LambdaRuntimeMain {
        }
        LambdaRuntimeMacosMain {
            dependsOn LambdaRuntimeMain
        }
        LambdaRuntimeTest {
        }
        LambdaRuntimeMacosTest {
            dependsOn LambdaRuntimeTest
        }
    }
}

//publishing {
//    publications {
//        LambdaRuntime {
//            artifactId = "lambda-runtime-kotlin-native"
//            groupId = 'com.batchofcode'
//            artifactId = 'lambda-runtime-kotlin-native'
//            version = project.findProperty('buildNum') ?: '0.0.1_SNAPSHOT'
//        }
//    }
//}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publish = true
//    publications = ['LambdaRuntime']
    filesSpec {
        from 'build/publications/LambdaRuntime/module.json'
        into 'com/batchofcode/lambda-runtime-kotlin-native/' + project.version
        rename 'module.json', 'lambda-runtime-kotlin-native-' + project.version + '.module'
    }
    pkg {
        repo = 'com.batchofcode'
        name = 'lambda-runtime-kotlin-native'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/c1phr/lambda-runtime-kotlin-native'
        version {
            name = project.findProperty('buildNum')
        }
    }
}

// TODO :kludge this is required for K/N publishing
bintrayUpload.dependsOn publishToMavenLocal

// This is for easier debugging of bintray uploading problems
bintrayUpload.doFirst {
    publications = project.publishing.publications.findAll { !it.name.contains('-test') }.collect {
        println("Uploading artifact '$it.groupId:$it.artifactId:$it.version' from publication '$it.name'")
        it
    }
}

task runProgram {
    def buildType = 'debug' // Change to 'debug' to run application with debug symbols.
    dependsOn "build"
    doLast {
        def programFile = "build/bin/LambdaRuntime/main/${buildType}/executable/lambda-runtime-kotlin-native.kexe"
        exec {
            executable programFile
            args ''
        }
    }
}