import org.gradle.internal.os.OperatingSystem
plugins {
    id 'kotlin-multiplatform' version '1.3.11'
    id 'maven-publish'
    id "com.jfrog.bintray" version "1.8.4"
}

group 'com.batchofcode'
version '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
    jcenter()
}

kotlin {
    targets {
        if (OperatingSystem.current().isMacOsX()) {
            println("Building for Mac")
            fromPreset(presets.macosX64, 'LambdaRuntime')
        }
        else {
            println("Building for Linux")
            fromPreset(presets.linuxX64, 'LambdaRuntime')
        }
        configure([LambdaRuntime]) {
//            compilations.main.outputKinds 'static'
//            compilations.main.entryPoint 'runtime.main'
            compilations.main.cinterops {
                libcurl
            }
        }
    }
    sourceSets {
        // Note: To enable common source sets please comment out 'kotlin.import.noCommonSourceSets' property
        // in gradle.properties file and re-import your project in IDE.
        LambdaRuntimeMain {
        }
        LambdaRuntimeTest {
        }
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            artifact "build/classes/kotlin/LambdaRuntime/main/lambda-runtime-kotlin-native.klib"
            artifactId = "lambda-runtime-kotlin-native"
            groupId = 'com.batchofcode'
            artifactId = 'lambda-runtime-kotlin-native'
            version = project.findProperty('buildNum')
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publish = true
    publications = ['maven']
    pkg {
        repo = 'com.batchofcode'
        name = 'lambda-runtime-kotlin-native'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/c1phr/lambda-runtime-kotlin-native'
        version {
            name = project.findProperty('buildNum')
        }
    }
}

task runProgram {
    def buildType = 'debug' // Change to 'debug' to run application with debug symbols.
    dependsOn "build"
    doLast {
        def programFile = "build/bin/LambdaRuntime/main/${buildType}/executable/lambda-runtime-kotlin-native.kexe"
        exec {
            executable programFile
            args ''
        }
    }
}